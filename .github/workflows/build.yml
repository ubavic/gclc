name: Build and release

on:
  push:
    tags:
      - "v*"

jobs:
  buildManual:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: xu-cheng/latex-action@v3
        with:
          working_directory: manual
          root_file: gclc_man.tex

      - name: Upload manual
        uses: actions/upload-artifact@v4
        with:
          name: manual-build-artifact
          path: manual/gclc_man.pdf

  buildWeb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14

      - name: Make WASM version
        run: make -f Makefile.web

      - name: Build web app
        working-directory: ./gclcWeb
        run: |
          npm install
          npm run build

      - name: Zip web app
        working-directory: ./gclcWeb/dist
        run: zip web.zip *

      - name: Upload web app
        uses: actions/upload-artifact@v4
        with:
          name: web-build-artifact
          path: gclcWeb/dist/web.zip

  buildLinux:
    runs-on: ubuntu-latest
    needs: [buildManual]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download manual
        uses: actions/download-artifact@v4
        with:
          name: manual-build-artifact

      - name: Move manual
        run: |
          rm source/manual/gclc_man.pdf
          mv gclc_man.pdf source/manual/gclc_man.pdf

      - name: Install Qt and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3 ninja-build cmake git gcc \
            libc6-dev perl build-essential libdrm-dev \
            libgles2-mesa-dev libgl1-mesa-dev libglu1-mesa-dev \
            libfreetype6-dev libfreetype-dev libfontconfig1 libfontconfig1-dev fontconfig libfontconfig-dev \
            libx11-xcb-dev libxrender-dev libxi-dev libxcb-xinerama0 libglx-dev \
            libxcb-render-util0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-xfixes0-dev libxcb-xkb-dev \
            libxcb-sync-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-image0-dev \
            libxcb-util-dev libxcb-cursor-dev libxkbcommon-dev libxkbcommon-x11-dev libxext-dev  \
            libx11-dev clang-15 clang-tools-15 clang-format-15 clang-tidy-15 \
            llvm-15-dev llvm-15-linker-tools llvm-15-tools llvm-15-runtime libclang-15-dev

      - name: Configure and install Qt
        run: |
          cd ..
          git clone --depth 1 -b 6.5.2 git://code.qt.io/qt/qt5.git qt6
          cd qt6
          ./init-repository --module-subset=essential,qtwayland
          mkdir build
          cd build
          ../configure -static -release -no-pch -skip webengine -nomake tests -nomake examples -fontconfig -prefix '/qtStatic' -opengl desktop -xcb-xlib
          cmake --build . --parallel
          sudo cmake --install .

      - name: Make CLI and GUI version
        run: |
          cmake -DCMAKE_CXX_FLAGS="-static" -DCMAKE_INSTALL_PREFIX=executable -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=/qtStatic -B build -S .
          cmake --build build
          cmake --build build --target install

      - name: Upload executables
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-artifact
          path: executable/

  buildWindows:
    runs-on: windows-2022
    needs: [buildManual]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download manual
        uses: actions/download-artifact@v4
        with:
          name: manual-build-artifact

      - name: Move manual
        run: |
          rm source/manual/gclc_man.pdf
          mv gclc_man.pdf source/manual/gclc_man.pdf

      - name: Install QT
        uses: jurplel/install-qt-action@v3.3.0
        with:
          version: "6.6.0"
          host: "windows"
          target: "desktop"
          arch: "win64_mingw"
          cache: "false"

      - name: Make CLI and GUI version
        run: |
          cmake -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX=executable -DCMAKE_BUILD_TYPE=RelWithDebInfo -B build -S .
          cmake --build build
          cmake --build build --target install

      - name: Move DLLs
        run: |
          cp ../Qt/6.6.0/mingw_64/bin/Qt6Core.dll executable/
          cp ../Qt/6.6.0/mingw_64/bin/Qt6Gui.dll executable/
          cp ../Qt/6.6.0/mingw_64/bin/Qt6PrintSupport.dll executable/
          cp ../Qt/6.6.0/mingw_64/bin/Qt6Widgets.dll executable/
          mkdir -p executable/platforms/
          cp ../Qt/6.6.0/mingw_64/plugins/platforms/qwindows.dll executable/platforms/

      - name: Upload executables
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifact
          path: executable/

  release:
    runs-on: ubuntu-latest
    needs: [buildManual, buildLinux, buildWindows, buildWeb]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Download manual
        uses: actions/download-artifact@v4
        with:
          name: manual-build-artifact

      - name: Download linux build
        uses: actions/download-artifact@v4
        with:
          name: linux-build-artifact

      - name: Download windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build-artifact

      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build-artifact

      - name: Zip Linux package
        run: zip -r linux.zip gclc gclc-gui gclc_man.pdf README.md LICENSE.md working_example samples LaTeX_packages XML_support

      - name: Zip Windows package
        run: zip -r windows.zip gclc.exe gclc-gui.exe gclc_man.pdf README.md LICENSE.md working_example samples LaTeX_packages XML_support *.dll platforms/

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            linux.zip
            windows.zip
            web.zip
          tag_name: ${{ github.ref_name }}

      - name: Move
        run: |
          cp gclc_man.pdf source/manual/gclc_man.pdf
          mv gclc_man.pdf manual/gclc_man.pdf
          mv gclc-gui.exe executable/pre-built/windows/gclc-gui.exe
          mv gclc.exe executable/pre-built/windows/gclc.exe
          mv gclc-gui executable/pre-built/linux/gclc-gui
          mv gclc executable/pre-built/linux/gclc

      - name: Commit
        uses: EndBug/add-and-commit@v9
        with:
          message: Build executables and manual
          default_author: github_actions
          add: "manual/gclc_man.pdf source/manual/gclc_man.pdf executable/pre-built/*"
          push: origin HEAD:master
